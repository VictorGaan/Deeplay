// <auto-generated />
using System;
using Deeplay.PersonnelRecords.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deeplay.PersonnelRecords.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220610151903_Deeplay")]
    partial class Deeplay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("SubdivisionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("PositionId");

                    b.HasIndex("SubdivisionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1983, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Владислав",
                            GenderId = 1,
                            LastName = "Семёнов",
                            MiddleName = "Агафонович",
                            PositionId = 1,
                            SubdivisionId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1991, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Алексей",
                            GenderId = 1,
                            LastName = "Кабанов",
                            MiddleName = "Митрофанович",
                            PositionId = 2,
                            SubdivisionId = 2
                        });
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Female"
                        });
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Director"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Department head"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Controller"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Worker"
                        });
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Subdivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subdivisions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Finance"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Management"
                        });
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Employee", b =>
                {
                    b.HasOne("Deeplay.PersonnelRecords.Models.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplay.PersonnelRecords.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplay.PersonnelRecords.Models.Subdivision", "Subdivision")
                        .WithMany("Employees")
                        .HasForeignKey("SubdivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Position");

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Gender", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Deeplay.PersonnelRecords.Models.Subdivision", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
